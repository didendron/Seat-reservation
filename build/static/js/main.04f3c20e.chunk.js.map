{"version":3,"sources":["app/seatsSlice.js","app/Home.js","app/Board.js","app/Summary.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["fetchSeats","createAsyncThunk","a","fetch","response","json","data","seatsSlice","createSlice","name","initialState","allSeats","isRowOfSeats","numberOfSelectedSeats","reducers","selectSeats","state","action","payload","cords","y","x","selected","clearSelection","forEach","row","i","element","j","changeStatusOfSeats","changeNumberOfSeats","extraReducers","builder","addCase","pending","fulfilled","seat","seats","actions","Home","props","dispatch","useDispatch","numOfSelectedSeats","useSelector","rowOfSeats","useEffect","chooseExampleSeats","array","k","reserved","push","length","Number","saveSelectedSeats","className","htmlFor","type","id","onChange","e","target","value","onClick","preventDefault","history","Board","document","getElementById","style","backgroundColor","loadExampleSeats","map","event","Summary","App","exact","path","component","store","configureStore","reducer","seatsReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.04f3c20e.chunk.js","sourcesContent":["import { createAsyncThunk, createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst initialState={\r\n    allSeats:[\r\n        [null,null,null,null,null,null,null,null,null,null],\r\n        [null,null,null,null,null,null,null,null,null,null],\r\n        [null,null,null,null,null,null,null,null,null,null],\r\n        [null,null,null,null,null,null,null,null,null,null],\r\n        [null,null,null,null,null,null,null,null,null,null],\r\n        [null,null,null,null,null,null,null,null,null,null],\r\n        [null,null,null,null,null,null,null,null,null,null],\r\n        [null,null,null,null,null,null,null,null,null,null],\r\n        [null,null,null,null,null,null,null,null,null,null],\r\n        [null,null,null,null,null,null,null,null,null,null],\r\n        [null,null,null,null,null,null,null,null,null,null],\r\n        [null,null,null,null,null,null,null,null,null,null],\r\n        [null,null,null,null,null,null,null,null,null,null],\r\n        [null,null,null,null,null,null,null,null,null,null],\r\n        [null,null,null,null,null,null,null,null,null,null]\r\n    ],\r\n    isRowOfSeats:false,\r\n    numberOfSelectedSeats:0\r\n\r\n}\r\n\r\nexport const fetchSeats=createAsyncThunk('seats/fetchSeats',async ()=>{\r\n    \r\n    const response= await fetch('https://seat-reservation-my-app.herokuapp.com/seats');//http://localhost:5000/seats\r\n    const data=await response.json();\r\n    \r\n    return data;\r\n}\r\n)\r\n\r\nexport const seatsSlice=createSlice({\r\n\r\n    name:\"seats\",\r\n    initialState,\r\n    reducers:{\r\n        selectSeats:(state,action)=>{\r\n            state.allSeats[action.payload.cords.y][action.payload.cords.x].selected=!action.payload.selected\r\n        },\r\n        clearSelection:(state)=>{\r\n            state.allSeats.forEach((row,i)=>{\r\n                row.forEach((element,j)=>{\r\n                    if(state.allSeats[i][j]&&state.allSeats[i][j].selected){\r\n                        state.allSeats[i][j].selected=false\r\n                    }\r\n                })\r\n            })\r\n            state.isRowOfSeats=false\r\n            state.numberOfSelectedSeats=0 \r\n        },\r\n        changeStatusOfSeats:(state)=>{\r\n            state.isRowOfSeats=!state.isRowOfSeats\r\n        },\r\n        changeNumberOfSeats:(state,action)=>{\r\n            state.numberOfSelectedSeats=action.payload\r\n        }\r\n    },\r\n    extraReducers:builder=>{\r\n        builder\r\n        .addCase(fetchSeats.pending, (state, action) => {\r\n            \r\n          })\r\n        .addCase(fetchSeats.fulfilled,(state,action)=>{\r\n            action.payload.forEach(seat => {\r\n                 state.allSeats[seat.cords.y][seat.cords.x]=seat\r\n                 state.allSeats[seat.cords.y][seat.cords.x].selected=false\r\n                 state.isRowOfSeats=false\r\n                 state.numberOfSelectedSeats=0\r\n            });\r\n\r\n        })\r\n    }\r\n\r\n\r\n});\r\n\r\nexport const allSeats=(state)=>state.seats.allSeats;\r\nexport const numberOfSelectedSeats=(state)=>state.seats.numberOfSelectedSeats;\r\nexport const isRowOfSeats=(state)=>state.seats.isRowOfSeats;\r\nexport const {selectSeats,clearSelection,changeStatusOfSeats,changeNumberOfSeats}=seatsSlice.actions;\r\n\r\n\r\nexport default seatsSlice.reducer;","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { numberOfSelectedSeats,isRowOfSeats,allSeats,\r\n    changeNumberOfSeats, changeStatusOfSeats, selectSeats, clearSelection } from \"./seatsSlice\";\r\n\r\n\r\nfunction Home(props){\r\n\r\n    const dispatch=useDispatch();\r\n    const numOfSelectedSeats=useSelector(numberOfSelectedSeats);\r\n    const rowOfSeats=useSelector(isRowOfSeats);\r\n    const seats=useSelector(allSeats);\r\n\r\n    useEffect(()=>{\r\n        dispatch(clearSelection());\r\n      },[dispatch]);\r\n\r\n    const handleSubmit=(event)=>{\r\n        event.preventDefault();\r\n        chooseExampleSeats();\r\n        props.history.push(\"/board\");\r\n    }\r\n\r\n    const chooseExampleSeats=()=>{\r\n        var array=[]\r\n        if(rowOfSeats){\r\n            for(let i=0;i<15-numOfSelectedSeats;i++){\r\n                for(let j=0;j<10-numOfSelectedSeats;j++){\r\n                    for(let k=0;k<numOfSelectedSeats;k++){\r\n                        if(seats[i+k][j]!=null&&!seats[i+k][j].reserved){\r\n                            array.push(seats[i+k][j])   \r\n                        }  \r\n                    }\r\n                    if(array.length===Number(numOfSelectedSeats)){\r\n                        saveSelectedSeats(array);\r\n                        return;\r\n                    }else{\r\n                        array=[]\r\n                    }\r\n                    for(let k=0;k<numOfSelectedSeats;k++){\r\n                        if(seats[i][j+k]!=null&&!seats[i][j+k].reserved){\r\n                            array.push(seats[i][j+k])\r\n                        }  \r\n                    }\r\n                    if(array.length===Number(numOfSelectedSeats)){\r\n                        saveSelectedSeats(array);\r\n                        return;\r\n                    }else{\r\n                        array=[]\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else{\r\n            for(let i=0;i<15;i++){\r\n                for(let j=0;j<10;j++){\r\n                    if(seats[i][j]!=null&&!seats[i][j].reserved){\r\n                        array.push(seats[i][j])   \r\n                    }  \r\n                    if(array.length===Number(numOfSelectedSeats)){\r\n                        saveSelectedSeats(array);\r\n                        return;\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n    const saveSelectedSeats=(array)=>{\r\n        array.forEach(element => {\r\n            dispatch(selectSeats(element))\r\n        });\r\n    }\r\n\r\n    const handleNumberChange=(event)=>{\r\n        dispatch(changeNumberOfSeats(event.target.value))\r\n        \r\n    }\r\n\r\n    const handleCheckboxChange=(event)=>{\r\n        dispatch(changeStatusOfSeats())\r\n        \r\n    }\r\n\r\n        return(\r\n            <div className=\"container\">\r\n            <div className=\"row justify-content-around\">\r\n            <div className=\"col-sm-3 \" >\r\n          \r\n            \r\n            <form className=\"col mt-5 \">\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"placesNumber\" className=\" col col-form-label\" >Liczba miejsc:</label>\r\n                    <div className=\"col \" >\r\n                        <input type=\"text\" className=\"form-control\" id=\"placesNumber\" onChange={(e)=>handleNumberChange(e)}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"checkbox mt-4 col\">\r\n                    <label>\r\n                        <input type=\"checkbox\" onChange={(e)=>handleCheckboxChange(e)}/> Czy miejsca mają być obok siebie?\r\n                    </label>\r\n                </div>\r\n\r\n                <div className=\"mt-4 col\">\r\n                    <button type=\"submit\" className=\"btn btn-primary w-100\" \r\n                    onClick={(e)=>handleSubmit(e)}>Wybierz miejsca</button>\r\n                </div>\r\n\r\n            </form>\r\n            </div>\r\n            </div>\r\n            </div>\r\n        );\r\n    \r\n\r\n}\r\n\r\nexport default Home;","\r\n\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {  useSelector } from \"react-redux\";\r\nimport './Board.css';\r\nimport {  allSeats, selectSeats } from \"./seatsSlice\";\r\n\r\nfunction Board(props){\r\n\r\n    \r\n    const dispatch=useDispatch();\r\n    const seats=useSelector(allSeats);\r\n    \r\n    const loadExampleSeats=()=>{\r\n        for(let i=0;i<seats.length;i++){\r\n            for(let j=0;j<seats[i].length;j++){\r\n                if(seats[i][j]!=null&&seats[i][j].selected){\r\n                const id=seats[i][j].cords.y*15+seats[i][j].cords.x;\r\n                const element=document.getElementById(id);\r\n                element.style.backgroundColor='orange';\r\n            }\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        loadExampleSeats();\r\n    });\r\n\r\n    \r\n\r\n    const handleClick=(event,seat)=>{\r\n        if(seat.reserved) return;\r\n\r\n        if(!seat.selected){\r\n            event.target.style.backgroundColor = \"orange\";\r\n        }else{\r\n            event.target.style.backgroundColor = \"white\";\r\n        }\r\n        dispatch(selectSeats(seat));\r\n        \r\n        \r\n        \r\n    }\r\n    const handleSubmit=(event)=>{\r\n        event.preventDefault();\r\n        props.history.push(\"/summary\")\r\n    }\r\n\r\n   \r\n\r\n        return(\r\n            <div className=\"mycontainer\">\r\n            {seats.map((row,i)=>\r\n                 <div className=\"squares\" key={i+1000}>\r\n                     {row.map((element,j)=>\r\n                            (seats[i][j]!=null)?\r\n                            (<div className={seats[i][j].reserved?\"blackSquare\":\"square\"} \r\n                            key={i*15+j} id={i*15+j} onClick={(e)=>handleClick(e,seats[i][j])}></div>)\r\n                            : (<div className=\"hiddenSquare\" key={i*15+j} ></div>)\r\n                            )}\r\n\r\n                </div>\r\n\r\n            )}\r\n            <div className=\"row\">\r\n                \r\n                    <div className=\"col-sm-1\"><div className=\"square\"></div></div>\r\n                    <div className=\"col-sm-2 d-flex align-items-center\">Miejsca dostępne</div>\r\n                    <div className=\"col-sm-1\"><div className=\"blackSquare\"></div></div>\r\n                    <div className=\"col-sm-3 d-flex align-items-center \">Miejsca zarezerwowane</div>\r\n                    <div className=\"col-sm-1\"><div className=\"orangeSquare\"></div></div>\r\n                    <div className=\"col-sm d-flex align-items-center \">Twój wybór</div>\r\n                    <div className=\"col-sm d-flex align-items-center\">\r\n                        <button type=\"submit\" className=\"btn btn-secondary btn-lg \"\r\n                        onClick={(e)=>handleSubmit(e)} >Rezerwuj</button>\r\n                    </div>\r\n                \r\n            </div>\r\n            </div>\r\n           \r\n           \r\n        );\r\n    \r\n\r\n}\r\n\r\nexport default Board;","import { useSelector } from \"react-redux\";\r\nimport { allSeats } from \"./seatsSlice\";\r\n\r\n\r\nfunction Summary(){\r\n\r\n    const seats=useSelector(allSeats);\r\n\r\n    return(\r\n       <div className=\"container ml-5 mt-5\">\r\n           <h3>\r\n               Twoja rezerwacja przebiegła pomyślnie!\r\n           </h3>\r\n           <p className=\"fs-3 mt-3\">\r\n               Wybrałeś miejsca:\r\n           </p>\r\n           <ul className=\"fs-3\">\r\n\r\n           {seats.map((row,i)=>\r\n                 <div key={i+1000} >\r\n                     {row.map((element,j)=>\r\n                            (seats[i][j]!=null&&seats[i][j].selected)?\r\n                            (<li key={i*15+j}>rząd {j}, miejsce {i} ({seats[i][j].id})</li>):null)\r\n                            }\r\n                </div>\r\n\r\n            )}\r\n\r\n           </ul>\r\n           <h5 className=\"mt-5\">\r\n               Dziękujemy! W razie problemów prosimy o kontakt z działem administracji.\r\n           </h5>\r\n       </div> \r\n    );\r\n}\r\n\r\nexport default Summary;","import React, {   useEffect } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './App.css';\nimport Home from './app/Home';\nimport Board from './app/Board';\nimport Summary from './app/Summary';\nimport { useDispatch } from 'react-redux';\nimport {fetchSeats} from './app/seatsSlice';\n\n\n\nfunction App() {\n\n    const dispatch=useDispatch();\n\n    useEffect(()=>{\n      dispatch(fetchSeats());\n    },[dispatch]);\n \n    return(\n      \n      <Router>\n        <Route exact path=\"/\" component={Home}></Route>\n        <Route path=\"/board\" component={Board}></Route>\n        <Route path=\"/summary\" component={Summary}></Route>\n      </Router>\n    \n    );\n  \n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport seatsReducer from './seatsSlice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    seats:seatsReducer\r\n  },\r\n});","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}